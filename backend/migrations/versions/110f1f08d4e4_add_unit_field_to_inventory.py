"""add unit field to inventory

Revision ID: 110f1f08d4e4
Revises: 6179d49c6319
Create Date: 2025-04-06 10:20:00.247699

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '110f1f08d4e4'
down_revision: Union[str, None] = '6179d49c6319'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_unique_constraint(None, 'campaign', ['id'])
    op.create_unique_constraint(None, 'conversation', ['id'])
    op.create_unique_constraint(None, 'customer', ['id'])
    # Add the unit column with a default value for existing rows
    op.add_column('inventory', sa.Column('unit', sa.String(length=20), server_default='units', nullable=False))
    op.create_unique_constraint(None, 'inventory', ['id'])
    op.create_unique_constraint(None, 'messages', ['id'])
    op.create_unique_constraint(None, 'restaurant', ['id'])
    op.create_unique_constraint(None, 'restaurantcustomer', ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'restaurantcustomer', type_='unique')
    op.drop_constraint(None, 'restaurant', type_='unique')
    op.drop_constraint(None, 'messages', type_='unique')
    op.drop_constraint(None, 'inventory', type_='unique')
    op.drop_column('inventory', 'unit')
    op.drop_constraint(None, 'customer', type_='unique')
    op.drop_constraint(None, 'conversation', type_='unique')
    op.drop_constraint(None, 'campaign', type_='unique')
    # ### end Alembic commands ###
